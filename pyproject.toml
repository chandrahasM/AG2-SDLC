[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "workflow1-code-to-design"
version = "1.0.0"
description = "AI agent system that reverse-engineers accurate design documentation from existing codebases"
authors = [
    {name = "AG2 SDLC Team", email = "team@ag2-sdlc.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "agents", "documentation", "code-analysis", "design", "sdlc"]

dependencies = [
    "pydantic>=2.0.0",
    "asyncio",
    "pathlib",
    "typing-extensions>=4.0.0",
    "aiofiles>=23.0.0",
    "python-magic>=0.4.27",
    "chardet>=5.0.0",
    "pygments>=2.15.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "networkx>=3.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "jinja2>=3.1.0",
    "markdown>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.0.0",
]
api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "httpx>=0.24.0",
]
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "redis>=4.5.0",
]
analysis = [
    "ast-tools>=0.1.0",
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "tree-sitter-javascript>=0.20.0",
    "tree-sitter-java>=0.20.0",
    "tree-sitter-go>=0.20.0",
    "linguist>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/ag2-sdlc/workflow1-code-to-design"
Documentation = "https://workflow1-code-to-design.readthedocs.io"
Repository = "https://github.com/ag2-sdlc/workflow1-code-to-design.git"
Issues = "https://github.com/ag2-sdlc/workflow1-code-to-design/issues"

[project.scripts]
workflow1 = "workflows.workflow1_orchestrator:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "agents*", "workflows*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tree_sitter.*",
    "magic.*",
    "pygments.*",
    "networkx.*",
    "pandas.*",
    "numpy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["core", "agents", "workflows"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]